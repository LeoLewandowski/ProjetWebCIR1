/*
    Ceci est la page principale de CSS, qui est incluse dans toutes les pages HTML
    Elle contient notamment du style général, du style pour des classes d'aide (.img-theme, .img-round etc.)
    ainsi que la plupart du code responsive de thème
    Elle gère aussi le changement de couleurs entre thème clair et thème foncé

    La disposition par défaut est celle pour mobile, celle pour ordinateur est gérée par une media-query
*/


/* ------------------------- GENERAL THEME ------------------------- */

:root {
    /* Taille du footer, utilisée sur body et footer donc nécessite une variable */
    --footer-height: 50px;

    /* Variables de couleur, liées au thème du site. Par défaut -> thème clair */
    --main-theme-color: white;
    --secondary-theme-color: rgb(250, 250, 250);
    --tertiary-theme-color: rgb(215, 215, 215);
    --text-theme-color: black;
    --theme-box-shadow: 0 1px 8px 3px rgba(0, 0, 0, 0.0509803922);
    --theme-accent-color: orange;
    --glasspane-filter-size: 5px;

    /* Variables inutilisés, servent en tant que reminder des valeurs à utiliser en media-query*/
    --breakpoint-xs: 0;
    --breakpoint-sm: 576px;
    --breakpoint-md: 768px;
    --breakpoint-lg: 992px;
    --breakpoint-xl: 1200px;

    font-size: min(14px, 2.5vw);
}

/* 
    Applique un thème par défaut à tous les éléments, notamment une valeur de transition, un scroll-behavior,
    une police de caractères ainsi que la couleur de texte associée au thème
 */
* {
    font-family:'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
    margin: 0;
    padding: 0;
    color: var(--text-theme-color);
    transition: all .5s;
    scroll-behavior: smooth;
}


body {
    display: block;

    /* La taille des bordures et du padding est inclue dans les propriétés width et height */
    box-sizing: border-box;

    /* Doit faire au minimum la taille du viewport. Util pour les pages comme "contact" qui ne remplissent pas
    un viewport entier */
    min-height: 100vh;

    /* Position relative pour agir en tant qu'ancre pour les éléments enfants */
    position: relative;

    /* Couleur */
    background-color: var(--secondary-theme-color);
    color: var(--text-theme-color);

    /* Sert à l'affichage du footer, pour qu'aucun élément n'apparaisse à la place du footer */
    padding-bottom: calc(var(--footer-height) + 10px);
}

svg {
    stroke: var(--text-theme-color);
}

/* ---------------------------- TITLES & PARAGRAPHS -----------------------------
    Thème des titres en général
*/

.title {
    margin: 20px 0 20px 0;
    font-size: 25px;
    font-weight: 900;
    text-align: center;
    color: var(--main-color);
}

h1,
h2,
h3,
h4,
h5,
h6 {
    text-align: center;
    margin: 1.25rem;
    text-indent: 0;
    font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

/* Grand titre, en petites majuscules */
h1 {
    font-size: 3rem;
    font-variant: small-caps;
}

/* Titres de section, soulignés avec la couleur d'accent */
h2 {
    font-size: 2rem;
    margin: 2.75rem;
    text-decoration: underline var(--theme-accent-color);
}

h3 {
    font-size: 1.5rem;
}

p {
    font-size: 1.5em;
    font-weight: 300;
}

/* ------------------------- HEADER & NAV -------------------------- */

/* Evite d'avoir un grand espace vide après le header */
header + * {
    margin-top: 0 !important;
}

header {
    --height:100vh;
    width: 100%;
    height: 100px;

    /* Affichage du logo et du nav */
    display: flex;
    flex-direction: row;
    align-items: center;

    /* Permet de l'accrocher au haut de la page quand on le dépasse en scrollant */
    position: sticky;
    top: 0;

    /* Affichage au-dessus de tous les autres éléments */
    z-index: 1000;

}

header > * {
    z-index: 10;
}

header::after {
    position: absolute;
    content: '';
    top: 0;
    height: 100px;
    z-index: 9;
    left: 0;
    right: 0;
    transition: all .5s ease-in-out;

    pointer-events: none;

    /* Style et apparence des éléments derrière */
    backdrop-filter: blur(var(--glasspane-filter-size)) brightness(50%);
    box-shadow: var(--theme-box-shadow);
}

header.nav-opened::after{
    height: calc(var(--height) + 100px);
}

footer {
    /* Affichage en bas de l'écran, sur toute la largeur */
    position: absolute;
    bottom: 0;
    bottom: 0px;
    width: 100%;
    height: var(--footer-height);
    box-sizing: border-box;

    /* Affichage des enfants et du texte */
    font-size: x-small;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 10px;

    /* Couleur */
    background-color: var(--main-theme-color);
    box-shadow: var(--theme-box-shadow)
}

/* Affichage général des sections et du main */
section,
main {
    display: flex;
    flex-direction: column;
    align-items: center;
    position: relative;
    margin: 25px 0;
    padding: 0 7.5%;
    gap: 15px;
}

/* Logo Octime */
#logo-header {
    display: inline-block;
    margin: 10px;
    margin-left: 5%;
}

#logo-header img {
    height: max(min(7vh, 5vw), 50px);
}

/* --------------------------- NAVIGATION --------------------------- */

nav {
    /* Positionné en-dessous du header, sur toute la largeur */
    position: absolute;
    left: 0;
    right: 0;
    top: 99%;
    /* A 100%, un léger espace apparaît entre header et nav, on laisse donc 99% */

    /* Texte */
    text-transform: uppercase;
    font-size: medium;
    font-weight: bold;

    /* Affichage des liens */
    display: flex;
    flex-direction: column;
    align-items: center;

    /* Misc */
    z-index: 10;
    overflow-y: hidden;
    pointer-events: none;

    /* Animation : hauteur de 0 quand le nav est fermé, transition smooth et linéaire */
    max-height: 0;
    transition: all .5s ease-in-out;
}

/*
    Etant donné que le JS était interdit, même en inline, nous avons dû jouer un peu avec les sélecteurs pour
    faire le menu déroulant.
    Quand le menu ou le bouton d'affichage sont soit en hover soit en focus, le menou s'ouvre.
    Seul hic : on ne peut pas re-cliquer sur le bouton pour refermer le menu, il faut cliquer autre part sur la
    page
*/
header.nav-opened nav {
    margin-bottom: 15px;
    max-height: var(--height);
}

nav a {
    position: relative;
    text-decoration: none;
    height: 50px;
    vertical-align: middle;
    line-height: 50px;
    z-index: 10;
    pointer-events: all;
}

/* Crée la ligne sous les liens du nav */
nav a::after {
    position: absolute;
    content: '';
    background-color: var(--theme-accent-color);
    height: 2px;
    bottom: 9px;
    /* Left > 50% & right > 50% --> largeur négative donc pas d'affichage */
    left: 55%;
    right: 55%;
    /* Jolie courbe de transition */
    transition: all .6s cubic-bezier(0.075, 0.82, 0.165, 1);
}

/* Affiche la ligne sous le lien */
nav a:hover::after,
nav a:focus::after {
    left: 5%;
    right: 5%;
}

#nav-button {
    position: absolute;
    background-color: transparent;
    border: none;
    cursor: pointer;
    padding: 5px 10px;
    z-index: 15;

    /* Centre le bouton verticalement et horizontalement */
    right: 50%;
    top: 50%;
    transform: translate(50%, -50%);
}

/* Barre du bouton de nav, élément SVG */
.nav-btn-bar {
    transition-property: transform;
    transition-duration: 0.3s;
    transform-origin: center;
    stroke: black;
    stroke-width: 10%;
}

/*
    Bouton "au repos" (affichage 3 barres)
    Décale une barre vers le haut, une autre vers le bas et une qui reste au milieu
*/

#nav-btn-bar1 {
    transform: translateY(-40%);
}

#nav-btn-bar3 {
    transform: translateY(40%);
}

/*
    Bouton "activé" (affichage croix)
    Remet les barres décalées au milieu, puis les fait tourner sur elle-mêmes à partir de leur centre
    Réduit la largeur de la barre centrale, ce qui la fait disparaître
*/

header.nav-opened #nav-button #nav-btn-bar1,
header.nav-opened #nav-button #nav-btn-bar1 {
    transform: rotate(45deg);
}

header.nav-opened #nav-button #nav-btn-bar2,
header.nav-opened #nav-button #nav-btn-bar2 {
    transform: scaleX(0.1);
}

header.nav-opened #nav-button #nav-btn-bar3,
header.nav-opened #nav-button #nav-btn-bar3 {
    transform: rotate(-45deg);
}


#login, #cart {
    /* Positionnement à droite et centré verticalement */
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    right: 20px;

    border-radius: 50%;
    transition: all .3s;
    height: fit-content;

    /* Couleur */
    box-shadow: 0 0 10px var(--text-theme-color);
}

#cart {
    right: 80px;
    box-shadow: none;
    border-radius: 0;
}

/* Définit la taille de l'image */
#login > img {
    width: 50px;
    height: 50px;
    border-radius: inherit;
}

#cart > img {
    width: 30px;
    height: 30px;
}

/* Couleurs inversées lors du survol */
#login:hover {
    color: var(--secondary-theme-color);
    background-color: var(--text-theme-color);
}

#login:hover>img {
    filter: invert();
}

/* Lien de retour en haut de la page */
#up {
    /* Positionnement en bas à droite, mais assez haut pour ne pas empiéter sur le footer en bas de la page */
    position: fixed;
    bottom: calc(var(--footer-height) + 10px);
    right: 20px;

    /* Aligne au centre l'image à l'intérieur */
    display: flex;
    align-items: center;
    justify-content: center;

    /* Taille relative à l'écran pour éviter de prendre trop de place */
    width: 7.5vh;
    height: 7.5vh;

    /* Misc */
    border-radius: 5vh;
    background-color: var(--main-theme-color);
    box-shadow: var(--theme-box-shadow);
    z-index: 15;
}

/* Image inversée de base, et tournée car la flèche est pointée vers le bas de base */
#up>img {
    filter: invert();
    width: 55%;
    rotate: 180deg;
}

/* ----------------------------- LINKS & INPUTS ----------------------------- */

a {
    color: var(--text-theme-color);
    transition: color .3s;
    text-decoration: underline;

    /* Affichage du curseur avec un doigt pointé */
    cursor: pointer;
}

/* Au survol, la couleur de texte devient la couleur d'accent */
a:hover,
button:hover,
input:hover {
    color: var(--theme-accent-color);
}

/* Enlève les transitions du textarea, surtout pour le resize */
textarea {
    transition: none;
}

button,
input,
textarea,
select,
option {
    background-color: var(--main-theme-color);
}

button:focus,
input:focus,
textarea:focus {
    color: var(--theme-accent-color);
    background-color: var(--main-theme-color);
}

.check-box {
    cursor: pointer;
}

.check-box input {
    display: none;
}

.check-box svg {
    width: 20px;
    height: 20px;
    overflow: visible;
}

.check-box path {
    fill: none;
    stroke: white;
    stroke-width: 6;
    stroke-linecap: round;
    stroke-linejoin: round;
    transition: stroke-dasharray 0.5s ease, stroke-dashoffset 0.5s ease, stroke .5s ease;
    stroke-dasharray: 241 9999999;
    stroke-dashoffset: 0;
}

.check-box input:checked~svg path {
    stroke: var(--theme-accent-color);
    stroke-dasharray: 70.5096664428711 9999999;
    stroke-dashoffset: -262.2723388671875;
}

.conditions-accept {
    margin: 10px;
    display: flex;
    flex-direction:row;
    align-items: center;
}

.conditions-accept > p {
    font-size: .6em;
    margin-left: 7px;
}

/* --------------------- USEFUL CLASSES --------------------- */

/* Classe bannière : Ce qui est affiché dans les pages accueil, produit, histoire et concept
   Inclus aussi la classe transition component, pour la transition entre les éléments */
.banner {
    /*
        Variable de source, précisée en CSS inline dans le document html.
        Inutile pour le moment, car le fond utilisé est toujours le même, mais pourrait
        être utile pour le semestre 2, donc gardée
    */
    --src: url('/images/mechanism.jpg');
    position: relative;
    background-color: transparent;
    overflow: hidden;
    justify-content: center;
    color: white !important;
    height: 100vh;
    margin: 0;
}

.banner * {
    color: white !important;
    max-width: 90vw;

    /*
        On applique l'animation à tous les enfants de la bannière, et on les rend invisibles au départ
        Délai de départ : 2s, durée : 1/2s, et on applique le style de l'animation à la fin
    */
    opacity: 0;
    animation: fadein forwards 2s .5s;
}

.banner::before {
    content: '';

    /* Positionnement sur toute la largeur et la hauteur du parent */
    position: absolute;
    width: 100%;
    height: 100%;

    /* On affiche l'image en fond, de façon à ce qu'elle couvre entièrement l'élément et qu'elle soit centrée */
    background: var(--src);
    background-size: cover;
    background-position: center center;

    /* On baisse la luminosité de l'image, pour que le texte positionné soit bien visible */
    filter: brightness(40%);

    /* Affichage derrière tous les autres éléments, notamment le parent */
    z-index: -10;
}

/* Lien vers le nav */
.banner a {
    /* Positionnement et affichage */
    position: absolute;
    display: block;
    width: 100px;
    height: 50px;
    top: 75%;

    /* Affichage de la flèche en fond */
    background: url(/images/arrow.svg) no-repeat;
    background-size: contain;
    background-position: center center;

    /* Délai avant le début de l'animation */
    animation-delay: 2s;
}

.transition {
    /* Variables nécessaires */
    --filter-size: var(--glasspane-filter-size);
    --color: var(--main-theme-color);
    --angle: 0deg;

    /* Définit la taille de l'élément, et le force à afficher
    seulement ce qui rentre dans l'écran */
    overflow: hidden;
    bottom: 0px;
    position: absolute;
    width: 100vw;
    max-width: 100vw;
    height: 15vh;

    /* Définit les effets du background : backdrop-blur en dégradé + dégradé de couleur */
    mask:linear-gradient(var(--angle), black 60%, transparent);
    backdrop-filter: blur(var(--filter-size));
    background: linear-gradient(var(--angle), var(--color), #0000);

    /* Supprime l'animation imposée par certains éléments parents */
    animation: none;
    opacity: 100%;
}

/* Affiche le fond en position fixe par rapport au Viewport */
.parallax,
.parallax::before {
    background-attachment: fixed;
}




/*
    Classe pour les citations
    Template :
    <div class="quote">
        <q>Texte</q>
        <span>Auteur</span>
    </div>
*/
.quote {
    display: flex;
    flex-direction: column;
    justify-content: center;
    /* Alignement des éléments à droite plutôt qu'à gauche */
    align-items: end;
}

.quote>q {
    font-size: 2rem;
}

/* Affiche les guillemets de la citation avec la couleur d'accent */
.quote>q::before,
.quote>q::after {
    color: var(--theme-accent-color);
}

.quote>span {
    /* Position relative pour l'affichage de la ligne au-dessus */
    position: relative;
    font-size: 1rem;
    margin: 6px;
    margin-top: 15px;
    color: gray;
}

/* Affichage d'une ligne entre la citation et son auteur */
.quote span::after {
    content: '';
    position: absolute;
    height: 2px;
    top: -8px;
    left: 5px;
    right: 5px;
    background-color: var(--theme-accent-color);
}

/* Ajout automatique d'un '- ' avant l'auteur d'une citation */
.quote>span::before {
    content: '— ';
}

/* Classes générales pour la disposition flex. Peu utilisées */

.container-horizontal {
    display: flex;
    flex-direction: row;
}

.container-vertical {
    display: flex;
    flex-direction: column;
}

.center {
    justify-content: center;
    align-items: center;
}

.error-wrapper.center * {
    justify-content: center;
    align-items: center;
}

.wrap {
    flex-wrap: wrap;
}

/* Classe pour rendre les images rondes */
.img-round {
    border-radius: 50%;
}

/* Classe pour afficher les messages d'erreur */
.error, .confirm, .warn {
    border-radius: 15px;
    padding: 10px 15px;
    box-sizing: content-box;
    max-width: 35vw;
    width: fit-content;
    display: block;
}

.confirm {
    background-color: rgba(0, 140, 0,0.5)
}

.confirm, .confirm * {
    color: limegreen;
    margin: 5px;
}

.warn {
    background-color: rgba(183, 110, 1, 0.5)
}

.warn, .warn * {
    color: orangered;
    margin: 5px;
}

.error {
    background-color: rgba(140, 0,20,0.5)
}

.error, .error * {
    color: rgba(220, 0, 0, 0.9);
    margin: 5px;
}

.error-wrapper {
    display: flex;
    flex-direction: column;
}

/* Classe pour les inputs stylisés */

.form-generic {
    display: flex;
    flex-direction: column;
    gap: 15px;
}

.input-box {
    margin: 10px;
    position: relative;
    width: fit-content;
}

.input-box input,
.input-box select,
.input-box textarea {
    border: solid 1.5px var(--tertiary-theme-color);
    border-radius: 1rem;
    padding: 1rem;
    font-size: 1rem;
    color: #f5f5f5;
    transition: border 150ms cubic-bezier(0.4, 0, 0.2, 1);
}

.input-box > label {
    position: absolute;
    left: -12px;
    color: gray;
    pointer-events: none;
    transform: translate(2rem, 1rem);
    transition: 150ms cubic-bezier(0.4, 0, 0.2, 1);
}

.input-box input:focus,
.input-box input:valid,
.input-box select:focus,
.input-box select:valid,
.input-box textarea:focus,
.input-box textarea:valid {
    outline: none;
    border: 1.5px solid var(--theme-accent-color);
}

.input-box > input:focus ~ label,
.input-box > input:not(:placeholder-shown) ~ label,
.input-box > select:focus ~ label,
.input-box > textarea:focus ~ label,
.input-box > textarea:not(:placeholder-shown) ~ label,
.input-box.force-anim > label {
    transform: translate(1rem, -100%) scale(0.8);
    color: white;
    padding: 0 .2em;
    filter: none;
}

.input-box > input:focus ~ label,
.input-box > select:focus ~ label, 
.input-box > textarea:focus ~ label {
    color: var(--theme-accent-color);
}

input[type="submit"], input[type="button"] {
    /*style du bouton*/
    background-color: black;
    color: white;
    border: 2px solid var(--theme-accent-color);
    padding: 0 2vh;
    cursor: pointer;
    box-sizing: content-box;
    margin:auto;
    width: 30%;
    border-radius: 5px;
    height: 5vh;
    text-align: center;
}

input:hover {
    color: var(--theme-accent-color);
}

legend {
    padding: 7px;
}

.mainTable {
    max-width: 95vw;
    transition: none;
}

.mainTable, .mainTable td, .mainTable th {
    border: 1px solid var(--theme-accent-color);
    box-shadow: 0 0 3px .3px var(--theme-accent-color);
    border-collapse: collapse;
}

.mainTable td, .mainTable th {
    padding: 1vw;
    height: 100%;
    transition: none;
}

/* -------------------------- ANIMATIONS -------------------------- */

@keyframes fadein {
    0% {
        translate: 0 50px;
        opacity: 0;
    }

    100% {
        translate: 0 0;
        opacity: 1;
    }
}

/* ------------------------------ RESPONSIVE ------------------------------ */

/* 
    Si l'utilisateur préfère un thème sombre, on change les variables associées au thème
*/
@media (prefers-color-scheme: dark) {
    :root {
        --main-theme-color: black;
        --secondary-theme-color: rgb(20, 20, 20);
        --tertiary-theme-color: rgb(60, 60, 60);
        --text-theme-color: white;
        --theme-box-shadow: 0 3px 4px 0 rgba(255, 255, 255, 0.2);
    }

    * {
        color-scheme: dark;
    }

    /* On inverse la couleur des images dépenantes du thème (icônes svg etc.) */
    .img-theme {
        filter: invert();
    }

    #login:hover>img,
    #up>img {
        filter: none;
    }
}


/* 
    Disposition ordinateur
*/
@media (min-width:768px) {

    /*
        L'affichage du nav change complètement, il est maintenant inclus dans le header et affiche
        ses enfants en ligne.
        Il est désormais affiché en toutes circonstances
    */
    nav {
        display: flex;
        position: initial;
        height: 100px;
        max-height: fit-content;
        justify-content: end;
        flex-direction: row;
        transition: none;
        margin-bottom: 0 !important;
        backdrop-filter: none;
        box-shadow: none;
        overflow: hidden;
    }

    /* Marge horizontale pour séparer les liens du nav entre eux */
    nav a {
        margin: 0 10px;
    }

    /* Le bouton n'a plus d'utilité alors il est caché */
    #nav-button {
        display: none;
    }

    /* On insère un espace entre le logo et le bord gauche du header */
    #logo-header {
        margin-left: 3%;
    }
}